name: Run Python Tests

on:
  push:
    branches: [ main ] # Assuming 'main' is the primary branch, please verify. If not, use the correct default branch.
  pull_request:
    branches: [ main ] # Assuming 'main' is the primary branch, please verify. If not, use the correct default branch.

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12"]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true

    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v4
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install dependencies (if cache not hit)
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root 
      # This installs dependencies specified in poetry.lock, excluding the project itself and dev dependencies initially.

    - name: Install project (including dev dependencies like pytest)
      run: poetry install --no-interaction 
      # This ensures the project itself and its dev dependencies (like pytest) are installed.

    - name: Run Pytest
      run: poetry run pytest
